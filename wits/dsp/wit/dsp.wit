package local:dsp@0.1.0;

interface types {
    type duration = u64; // 時間の長さを表す型
    type value = s16; // 信号の値を表す型
    record single {
        data: value, // 1chの信号データ
        elapsed: duration, // 信号の実時間長さ
    }

    record parameter {
        name: string, // パラメータの名前
        value: string, // パラメータの値
    }
}

// 1chの信号データを処理するインターフェース
interface single-channel {
    use types.{single, value, parameter};
    type error = string; // エラーを表す型
    resource processor {
        constructor(init: list<parameter>);
        // 設定可能なパラメータリスト
        parameters: static func() -> list<parameter>;
        // 処理
        process: func(input: single) -> value;
        // 現在地の取得
        get: func(name: string) -> result<parameter, error>;
        // パラメータの設定
        set: func(param: parameter) -> result<parameter, error>;
    }
}

world dsp {
    export single-channel;
    export types;

    // プラグインの識別名
    export plugin-name: func() -> string;
    export plugin-version: func() -> string;
}
